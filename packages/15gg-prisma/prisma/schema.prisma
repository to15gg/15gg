generator client {
  provider        = "prisma-client-js"
  output          = env("OUTPUT_PATH")
  previewFeatures = ["dataProxy"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Summoner {
  id            BigInt   @id @default(autoincrement())
  accountId     String   @unique @db.VarChar(56)
  encryptedId   String   @unique @db.VarChar(63)
  puuid         String   @unique @db.VarChar(78)
  name          String   @unique
  level         Int
  profileIconId Int
  revisionDate  DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  leagues       League[]
}

model League {
  id                BigInt    @id @default(autoincrement())
  leagueId          String    @unique
  queueType         QueueType
  tier              String
  rank              String
  points            Int
  wins              Int
  losses            Int
  hotStreak         Boolean
  veteran           Boolean
  freshBlood        Boolean
  inactive          Boolean
  promotionTarget   Int?
  promotionWins     Int?
  promotionLosses   Int?
  promotionProgress String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  summonerId        String
  summoner          Summoner  @relation(fields: [summonerId], references: [encryptedId])
}

enum QueueType {
  RANKED_SOLO_5x5
  RANKED_TEAM_5x5
}
